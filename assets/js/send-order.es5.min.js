"use strict";
(function (n, t, i) {
    function r() {
        this.ready()
    }

    return r.prototype = {
        controller: "SendOrder",
        selector: "[data-controller='SendOrder']",
        vars: {
            baseTotal: 0,
            editAdddress: {transfreeName: "", addressId: 0, addressString: "", plaque: "", unit: "", mobile: ""}
        },
        ready: function () {
            var t = this;
            n.autoClick(t);
            n.autoChange(t);
            t.vars.baseTotal = parseInt($("#totalSpan").text().replace(/,/g, ""));
           /* $(".card-body .input-group button").click(function () {
                var n = $(this).closest(".card-body"), i = n.find("input.d-block"), r = n.find("div.d-flex"),
                    t = +i.data("index"), u, f;
                i.removeClass("d-block").addClass("d-none");
                r.removeClass("d-flex").addClass("d-none");
                $(this).hasClass("next") ? t += 1 : t -= 1;
                u = n.find("input[data-index=" + t + "]");
                f = n.find("div[data-index=" + t + "]");
                u.length == 0 ? (i.removeClass("d-none").addClass("d-block"), r.removeClass("d-none").addClass("d-flex"), r.find("input[type=radio]")[0].checked = !0) : (u.removeClass("d-none").addClass("d-block"), f.removeClass("d-none").addClass("d-flex"), f.find("input[type=radio]")[0].checked = !0)
            });*/
            $(".range-btn").on("click", function () {
                t.deliveryTimeChange(this)
            });
            $("input.shipping").on("change", function () {
                t.shippingChange(this)
            })
        },
        showAddAddresseModal: function (t, i) {
            i.preventDefault();
            n.showModalDialog("/profile/addAddresseModal/", "ProfileAddress", function () {
                $("#IsCheckout").val("True")
            })
        },
        showEditAddresseModal: function (t, i) {
            i.preventDefault();
            var r = this;
            return (r.vars.editAdddress.addressId = +$(t).data("id"), r.vars.editAdddress.addressId === 0) ? n.notify.danger("هیچ آدرسی انتخاب نشده است") : n.showModalDialog("/profile/addAddresseModal/" + r.vars.editAdddress.addressId, "ProfileAddress", function () {
                $("#IsCheckout").val("True");
                $(".modal-title").text("ویرایش آدرس")
            })
        },
        shippingChange: function (n) {
            var s = this, t = +$(n).closest("[data-storeid]").data("storeid"), h = $(n).attr("id"),
                c = $("label[for=" + h + "] span").text(), i, u, r, f, e, o;
            $("#currentCost" + t).text(c);
            i = "div[data-storeid=" + t + "] ";
            $(i + ".shipping-desc").hide();
            u = parseInt($(n).data("type"));
            r = 0;
           /* $("input:radio[name^=shipping_]:checked").each(function (n, t) {
                r += +$(t).data("cost")
            });*/
            f = parseInt($(n).val());
            $(i + "#shippingDesc_" + f).show();
            /*$("#shippingCost").text(r.toLocaleString());*/
            e = $("#totalSpan");
            o = s.vars.baseTotal + parseInt(r);
            e.text(o.toLocaleString());
            u === 2 ? ($("#deliveryTimes_" + t).slideDown(), $("html,body").animate({scrollTop: $(i + "#deliveryTimes_" + t).offset().top}, "slow")) : $(i + "#deliveryTimes_" + t).slideUp();
            init.updateSticky()
        },
        addressChange: function (n) {
            var t, i, r, u, f;
            $(n).addClass("uk-active");
            n.dataset.selected = !0;
            t = $("#panel-selection-wrapper").find("figure.tm-panel-selection2.uk-active").not(n);
            $.each(t, function () {
                $(this).removeClass("uk-active");
                this.dataset.selected = "false"
            });
            i = $("#transfreeName");
            r = $(n).find(".transfree-name");
            i.val($(r).text());
            u = $("#transfreePhoneNumber");
            f = $(n).find(".transfree-phone");
            u.val($(f).text())
        },
        deliveryTimeChange: function (n) {
            var t = +$(n).closest("[data-storeid]").data("storeid"), i = "div[data-storeid=" + t + "] ";
            $.each($(i + ".range-btn"), function () {
                $(this).removeClass("uk-active");
                $(this).empty().append("انتخاب ساعت")
            });
            $(n).empty().append('<i class="uk-icon-check"><\/i>انتخاب شد');
            $(n).addClass("uk-active")
        },
        saveAndProcced: function () {
            var r = this, u = +($(".current-address").attr("data-id") || "0"), t, i, f;
            if (u === 0) return n.notify.warning("لطفا آدرس تحویل سفارش خود را انتخاب نمایید");
            if ($(".current-address .transfree-name").text() === "") return n.notify.warning("لطفا نام و نام خانوادگی تحویل گیرنده را وارد نمائید"), $('.current-address [data-click="editAddress"]').click(), !1;
            if ((t = $("input:radio[name^=shipping_]:checked"), i = $("input:radio[name^=deliveryTime_]:checked"), t.length === 0) || t.attr("data-type") === "2" && i.length == 0) return n.notify.warning("لطفا زمان ارسال کالای خود را انتخاب نمائید ");
            f = r.checkCartAjax()
        },
        checkCartAjax: function () {
            var r = this, u = $("#proccedBtn"), i;
            u.prop("disabled", !0);
            i = $.ajax({url: "/location/CheckCustomerStore", type: "POST", contentType: "application/json"});
            i.done(function (n) {
                var i;
                if (typeof n == "string" && n.indexOf("err_connection_refused") > -1) return $(document).trigger("ajaxError");
                i = [];
                $("input:radio[name^=shipping_]:checked").each(function (n, t) {
                    var r = +$(t).closest("[data-storeid]").data("storeid"), s = "div[data-storeid=" + r + "] ",
                        u = $(t), o = +u.val(), f = parseInt(u.data("type")),
                        e = $("input[name=deliveryTime_" + r + "]:checked").val();
                    f !== 2 && (e = null);
                    i.push({storeId: r, shippingCostSettingsId: o, shippingTypeCode: f, deliveryTime: e})
                });
                var r = $(".current-address .transfree-name").text(), u = $(".current-address .address-mobile").text(),
                    f = $("#desc").val(), e = +$(".current-address").attr("data-id");
                $("#SelectedAddressId").val(e);
                i.forEach(function (n, t) {
                    $("#ShippingCostSettings_" + t + "_StoreId").val(n.storeId);
                    $("#ShippingCostSettings_" + t + "_ShippingCostSettingsId").val(n.shippingCostSettingsId);
                    $("#ShippingCostSettings_" + t + "_ShippingTypeCode").val(n.shippingTypeCode);
                    $("#ShippingCostSettings_" + t + "_DeliveryTime").val(n.deliveryTime)
                });
                $("#Transfree").val(r);
                $("#Description").val(f);
                $("#TransfreePhone").val(u);
                t.forms.sbmForm.submit()
            });
            i.fail(function (t) {
                var i, f;
                t.status !== 0 && (i = t.responseJSON, i !== undefined && i !== null && typeof i == "object" ? i.errorCode === 20 && n.notify.confirm(i.errorMessage, function () {
                    r.changeStore(0)
                }, function () {
                    r.changeStore(i.sectorPartId)
                }, {
                    labels: {
                        Ok: "بله",
                        Cancel: "خیر"
                    }
                }) : (f = t.responseText.length > 0 ? t.responseText : "خطا در ارتباط با سرور", n.notify.danger(f)), u.prop("disabled", !1))
            })
        },
        changeStore: function (t) {
            var r = $.ajax({url: "/cart/ChangeShoppingCart/" + t, type: "POST", contentType: "application/json"});
            r.done(function (t) {
                if (typeof t == "string" && t.indexOf("err_connection_refused") > -1) return $(document).trigger("ajaxError");
                n.uiBusy();
                i.location.reload()
            });
            r.fail(function (t) {
                if (t.status !== 0) {
                    var i = t.responseText.length > 0 ? t.responseText : "خطا در ارتباط با سرور";
                    n.notify.danger(i)
                }
            })
        },
        changeAddress: function () {
            $(".current-address").addClass("d-none");
            $(".address-list").removeClass("d-none");
            init.updateSticky()
        },
        closeAddress: function () {
            $(".current-address").removeClass("d-none");
            $(".address-list").addClass("d-none");
            n.scrollToTop()
        },
        selectDeliveryAddress: function (t, i) {
            var r, f, u;
            i.preventDefault();
            r = this;
            r.vars.editAdddress.addressId = $(t).data("id");
            r.vars.editAdddress.transfreeName = $(t).find(".transfree-name").text();
            r.vars.editAdddress.addressString = $(t).find(".address-string").text();
            r.vars.editAdddress.plaque = $(t).find(".address-plaque").text().replace(/\D/g, "");
            r.vars.editAdddress.unit = $(t).find(".address-unit").text().replace(/\D/g, "");
            r.vars.editAdddress.postal_code = $(t).find(".address-postal_code").text();
            r.vars.editAdddress.mobile = $(t).find(".address-mobile").text();
            f = $(t).find(".address-text").html();
            $(".current-address").attr("data-id", r.vars.editAdddress.addressId);
            $(".current-address").find(".edit-address").attr("data-id", r.vars.editAdddress.addressId);
            $(".current-address").find(".transfree-name").text(r.vars.editAdddress.transfreeName);
            $(".current-address").find(".address-text").html(r.vars.editAdddress.addressString+' '+r.vars.editAdddress.plaque+' '+r.vars.editAdddress.unit+' '+r.vars.editAdddress.postal_code);
            $(".current-address").find(".address-mobile").html(r.vars.editAdddress.mobile);
            $(".address-footer").html('<div class="border-top text-center bg-gray-100" data-index="0">\n                                          <small class="text-black-50">ارسال سفارش به این آدرس<\/small>\n                                       <\/div>');
            $(".address-list .address-detail[data-id=" + r.vars.editAdddress.addressId + "] .address-footer").html('<div class="border-top text-center bg-secondary" data-index="1">\n                          <small class="text-white">سفارش به این آدرس ارسال می‌شود.<\/small>\n                        <\/div>');
            $(".address-list-data .address-detail").removeClass("border-secondary").removeClass("border").addClass("border");
            u = $('.address-footer [data-index="1"]').closest(".address-detail").removeClass("border").addClass("border-secondary");
            u.remove();
            $(".address-list-data").prepend(u);
            n.scrollToTop();
            setTimeout(function () {
                $(".current-address").removeClass("d-none");
                $(".address-list").addClass("d-none");
                $.toast({content: "آدرس تحویل سفارش تغییر یافت", type: "success", delay: 3e3})
            }, 500)
        },
        deleteAdddress: function (t, i) {
            i.preventDefault();
            i.stopPropagation();
            var u = this, r = +$(t).data("id");
            n.deleteEntity("/profile/deleteAddresse/" + r, null, function () {
                setTimeout(function () {
                    location.reload()
                }, 1e3)
            })
        }
    }, new r
})(okala, document, window);
